{"relevantArticles":[{"articleTitle":"在Debian 9上部署ss并开启混淆和bbr","articleAbstractText":"就个人看法来说，如果操作系统采用 Debian，无论是作为客户端还是服务端，使用 shadowsocks-libev 都是一种非常舒适流畅的体验。本文介绍如何在 Debian 系统中搭建 ss-libev 服务端。 注：以下的所有命令，都是针对 Debian 9 Stretch，并在 root 用户下执行的。 安装 添加stretch-backports： 12sh -c 'printf \"deb http://deb.debian.org/debian stretch-backports main\" &gt; /etc/apt/sources.list.d/stretch-backports.list'apt update 安装shadowsocks-libev和simple-obfs： 1apt -t stretch-backports install shadowsocks-libev simple-obfs -y 配置 编辑配置文件： 1vim /etc/shadowsocks-libev/config-obfs.json /etc/shadowsocks-libev/conf....","articleStatus":0,"articlePermalink":"/articles/2019/03/08/1552031080258.html","articleImg1URL":"https://img.hacpai.com/bing/20190218.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"gitlab-runner基于docker19.03.2版本持续集成的实践","articleAbstractText":"首先基础环境为  示例共有两个项目 一个为k8s集群中的环境变量项目，另一个为springboot微服务项目 1环境变量项目的自动部署 先看gitlab-ci的内容 image: gongdear/alpine-ssh:latest stages: - deploy-test - deploy-demo before_script: # 预先装 ssh-agent # 2019-09-19 使用已经安装ssh-agent的镜像 # - 'which ssh-agent || ( apk update &amp;&amp; apk add openssh-client)' # 启动服务 - eval $(ssh-agent -s) # 将私钥写入deploy.key 文件 - echo \"$SSH_PRIVATE_KEY\" &gt; deploy.key # 配置较低权限 - chmod 0600 deploy.key # 注入密钥 - ssh-add deploy.key - mkdir -p ~/.ssh - '[[ -f /.dockerenv ]] &amp;&amp; echo....","articleStatus":0,"articlePermalink":"/articles/2019/09/20/1568959288888.html","articleImg1URL":"https://img.hacpai.com/file/2019/09/image-ff7b8c0a.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"基于Centos7安装CDH6.3.0集群(一)","articleAbstractText":"一 环境准备 这里是CDH对环境的要求：Cloudera Enterprise 6 Requirements and Supported Versions 首先根据需要创建几个虚拟机，我是直接在家里zstack上面创建了6个，分别是common 用来安装公共的数据库和时间同步服务等，上面有docker环境，然后两个master和三个node，配置如下：  在机器的系统都装好以后开始执行以下操作 1 生成公私钥 [root@commonbase ~]# ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa. Your public key has been saved in ....","articleStatus":0,"articlePermalink":"/articles/2020/08/29/1598633033724.html","articleImg1URL":"https://b3logfile.com/file/2020/08/image-bffc8c66.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"gitlab-runner 安装使用","articleAbstractText":"gitlab-runner 安装使用","articleStatus":0,"articlePermalink":"/articles/2019/08/16/1565937022236.html","articleImg1URL":"https://img.hacpai.com/bing/20190323.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"升级Docker到19.03版本后Gitlab-Runner的配置","articleAbstractText":"以前升级docker版本时，多数情况都是兼容旧版的所有特性和功能的 结果在近期的CICD构建中，在ci脚本没有变化的情况下突然所有runner的构建都失败了 随后立即采取以下措施尝试修复  工程版本回退到上一次可用状态 更换runner服务器和容器 更改ci脚本 重启docker服务  均无效 执行构建步骤出现了以往没有出现过的警告信息 最终报错信息 Downloading artifacts for maven-build (280)... Downloading artifacts from coordinator... ok id=280 responseStatus=200 OK token=L9iuC5Ss $ docker build -t $CONTAINER_IMAGE:$IMAGE_VERSION . Cannot connect to the Docker daemon at tcp://docker:2375. Is the docker daemon running? ERROR: Job failed: exit code 1  寻找解决方法 该错误在早期版本....","articleStatus":0,"articlePermalink":"/articles/2019/09/20/1568953350682.html","articleImg1URL":"https://img.hacpai.com/file/2019/09/image-7f3779e1.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"}]}